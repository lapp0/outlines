name: Benchmark PR

on:
  pull_request:
    branches: [main]

permissions:
  contents: read  # Read access for repository contents
  pull-requests: write  # Write access for pull requests

env:
  PYTHON_VERSION: "3.10"
  WORKING_DIR: ${{ github.workspace }}/benchmarks
  ARTIFACTS_DIR: ${{ github.workspace }}/artifacts

jobs:
  benchmark-pr:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install asv virtualenv tabulate lf-asv-formatter

    - name: Create ASV machine config file
      run: asv machine --machine gh-runner --yes

    - name: Save comparison of PR against main branch
      run: |
        # ensure benchmarks are sane
        asv check -E existing --verbose

        # prepare main branch for comparison
        git remote add upstream https://github.com/${{ github.repository }}.git
        git fetch upstream main
        COMMIT_HASH=$(git rev-parse upstream/main)

        # produce benchmarks comment
        asv continuous upstream/main HEAD --factor 1.1 --sort ratio
        asv compare upstream/main HEAD --split --factor 1.1 --sort ratio | tee output
        python -m lf_asv_formatter
        printf "\n\nClick [here]($STEP_URL) to view all benchmarks." >> output
      env:
        STEP_URL: "${{ steps.jobs.outputs.html_url }}#step:8:1"

    - name: Find benchmarks comment
      uses: peter-evans/find-comment@v2
      id: find-comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: view all benchmarks

    - name: Create or update benchmarks comment
      uses: peter-evans/create-or-update-comment@v3
      with:
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: ${{ env.WORKING_DIR }}/output
        edit-mode: replace
