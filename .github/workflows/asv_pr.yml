name: Comment on PR with Benchmarks

on:
  pull_request:
    branches: [main]

permissions:
  contents: read  # Read access for repository contents
  pull-requests: write  # Write access for pull requests

env:
  PYTHON_VERSION: "3.10"
  WORKING_DIR: ${{ github.workspace }}/benchmarks
  ARTIFACTS_DIR: ${{ github.workspace }}/artifacts

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install asv

    - name: Save comparison of PR against main branch
      run: |
        # ensure benchmarks are sane
        asv check -E existing

        # prepare main branch for comparison
        git remote add upstream https://github.com/${{ github.repository }}.git
        git fetch upstream main
        COMMIT_HASH=$(git rev-parse upstream/main)

        # use consistent machine for benchmarks across runs
        asv machine --yes

        # produce benchmarks comment
        asv continuous upstream/main HEAD --factor 1.1 --sort ratio
        asv compare upstream/main HEAD --split --factor 1.1 --sort ratio | tee output
	pip install lf_asv_formatter
	python -m lf_asv_formatter
	printf "\n\nClick [here]($STEP_URL) to view all benchmarks." >> output

    - name: Publish comment to PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const path = require('path');

          const workingDir = process.env.WORKING_DIR;
          try {
            process.chdir(workingDir);
            const comment = fs.readFileSync('output', 'utf-8');
            const { data } = await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: comment,
            });
            console.log('Comment published:', data.html_url);
          } catch (err) {
            console.error(err);
          }
